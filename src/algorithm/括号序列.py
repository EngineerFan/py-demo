# -*- coding: utf-8 -*-
# @Author      : Ryan
# @Time        : 2021/5/29 16:38
# @Software    : PyCharm
# @Description : 括号序列


#
#
# @param s string字符串
# @return bool布尔型


# "["
# "]"
# "()"
# "(("
# "()[]{}"
# "([)]"
# "(["
# "([]"
# "([])"
# "[])"
# "(()])}[}[}[]][}}[}{})][[(]({])])}}(])){)((){"
# "(({}((({}(]([){)}]{){}{))))]["
# "[](([[]]){}{[]}([]))"
# "}(])[{(}([[}])}]))})]]({{(])"
# "[{[}}])()(})}{}]({}])][({"
# "{({))[}()))[{{}(]]([)(({)]]())[)}[([}[(]{"
# "({][])]]]){)[)}]]]}])]{}("
# "[][{[{{}}[][]{{}}]}]"
# "{(}{){)}[]}][[[{()]}(()[({({[}{[))(([])[)([])["
# "}{[{]}[{[(([}]({(]([(){){{)][{["

#
class Solution:
    def isValid(self, s):
        stack = []
        mp = {'(': ')', '[': ']', '{': '}'}
        for i in s:
            if len(stack) == 0:
                stack.append(i)
            else:
                if mp[stack[-1]] == i:
                    stack.pop()
                else:
                    return False
        return True



so = Solution()
s = "(){]}[]"
print(so.isValid(s=s))
